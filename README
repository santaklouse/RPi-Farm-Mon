#####################
### INITIAL SETUP ###
#####################

# ENABLE UART
#     https://www.raspberrypi.org/documentation/configuration/uart.md

echo "enable_uart=1" > /Volumes/boot/config.txt

# GPU MEMORY ALLOCATION
#     https://www.raspberrypi.org/documentation/configuration/config-txt/memory.md

echo "gpu_mem=16" >> /Volumes/boot/config.txt

diskutil umount /Volumes/boot

### OS SETUP ####

sudo bash

# DISABLE IPv&
#     https://www.raspberrypi.org/forums/viewtopic.php?t=138899

cat <<EOF > /etc/modprobe.d/ipv6.conf
alias net-pf-10 off
alias ipv6 off
options ipv6 disable_ipv6=1
blacklist ipv6
EOF

cat <<EOF >> /etc/sysctl.conf
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
net.ipv6.conf.eth0.disable_ipv6 = 1
net.ipv6.conf.[interface].disable_ipv6 = 1
EOF

# NETWORK CONFIGURATION
#     wlan0 = Internal WiFi Adaptor
#     wlan1 = USB WiFi Dongle (Using TP-Link TL-WN725N)

cat <<EOF > /etc/network/interfaces 
source-directory /etc/network/interfaces.d
auto lo
iface lo inet loopback
allow-hotplug wlan0
iface wlan0 inet static
address 192.168.100.1
netmask 255.255.255.0
allow-hotplug wlan1
iface wlan1 inet manual
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
EOF

cat <<EOF > /etc/wpa_supplicant/wpa_supplicant.conf
country=JP
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
    ssid="SSID"                 # < Change as you need
    psk="PASSWORD"              # < Change as you need
}
EOF

# ENABLE REQUIRED SERVICE
systemctl enable ssh
systemctl enable avahi-daemon

reboot

ssh pi@raspberrypi.local

# REMOVE UNNECESSARY PACKAGES AND UPDATE OS
sudo bash

echo 'deb http://ftp.jaist.ac.jp/raspbian/ jessie main contrib non-free rpi' > /etc/apt/sources.list
apt-get update
apt-get autoremove --purge -y alsa-utils bluez cifs-utils dosfstools dphys-swapfile ed fbset kbd keyboard-configuration nano nfs-common ntp rsyslog vim-tiny v4l-utils xauth xdg-user-dirs xkb-data
apt-get autoremove --purge -y
apt-get -y upgrade

# INSTALL REQUIRED PACKAGES
apt-get install -y vim ntpdate git
apt-get clean

# TIME CONFIGURATION
ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
ntpdate ntp.nict.jp
cat <<EOF > /etc/cron.hourly/ntpdate
#!/bin/sh
ntpdate ntp.nict.jp >/dev/null 2>&1
EOF
chmod 755 /etc/cron.hourly/ntpdate

# UPDATE FIRMWARE
rpi-update

# HOSTNAME CONFIGURATION
echo "broccoli" > /etc/hostname
echo "127.0.0.1       localhost" > /etc/hosts
echo "127.0.1.1       broccoli" >> /etc/hosts

reboot

####################
### CORRECT DATA ###
####################

git clone https://github.com/mbuzz15/RPi-Farm-Mon/

### I2C SENSOR DEVICE SETUP ###
# SHT31(Temperature/Humidity)
# TSL2561(Luminosity)

sudo sh -c 'echo i2c-bcm2708 >> /etc/modules'
sudo sh -c 'echo i2c-dev >> /etc/modules'

sudo sh -c 'echo dtparam=i2c_arm=on >> /boot/config.txt'
sudo sh -c 'echo dtparam=i2s=on >> /boot/config.txt'

sudo reboot

# INSTALL REQUIRED PACKAGES
sudo apt-get install -y i2c-tools python-smbus
i2cdetect -y 1

#         0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
#    00:          -- -- -- -- -- -- -- -- -- -- -- -- -- 
#    10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
#    20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
#    30: -- -- -- -- -- -- -- -- -- 39 -- -- -- -- -- -- 
#    40: -- -- -- -- -- 45 -- -- -- -- -- -- -- -- -- -- 
#    50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
#    60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
#    70: -- -- -- -- -- -- -- --

python RPi-Farm-Mon/lib/sht31.py
#    Temperature: 28.02
#    Humidity:    48.78

python RPi-Farm-Mon/lib/tsl2561.py 
#    Luminosity:  0.47

### SEND DATA TO AWS CLOUDWATCH ###

# INSTALL REQUIRED PACKAGES
sudo apt-get install -y awscli python-pip
sudo pip install boto3

aws configure

#    AWS Access Key ID [None]: XXXXXXXXXXXXXXXXXXXX
#    AWS Secret Access Key [None]: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#    Default region name [None]: ap-northeast-1
#    Default output format [None]: json

cp RPi-Farm-Mon/sample/sample1.py send_data.py
python send_data.py

$ crontab -e

#    :
#    :
#    */5 * * * * python /home/pi/send_data.py >/dev/null 2>&1

### USB WEBCAM SETUP ###
# USB Webcam - iBUFFALO BSWHD06MBK

sudo apt-get install -y fswebcam
fswebcam -d /dev/video0 -r 1280x960 --jpeg 95 image.jpg
rm image.jpg

# CREATE NEW BUCKET
aws s3 mb s3://monitoring-u7rrxtw2
#    make_bucket: s3://monitor-u7rxtw2az

# TAKE A IMAGE AND UPLOAD IMAGE TO AWS S3
# http://boto3.readthedocs.io/en/latest/guide/s3-example-creating-buckets.html

cat <<EOF > policy.json 
{
    "Statement": [
        {
            "Principal": "*",
            "Effect": "Allow",
            "Action": ["s3:GetObject"],
            "Resource": "arn:aws:s3:::monitor-u7rrxtw2/*"
        }
    ]
}
EOF
aws s3api put-bucket-policy --region ap-northeast-1 --bucket monitor-u7rrxtw2 --policy file://policy.json

cp RPi-Farm-Mon/sample/python/sample2.py upload_image.py
python upload_image.py

$ crontab -e

    :
    :
    * */6 * * * python /home/pi/upload_image.py >/dev/null 2>&1


######################
### CONTROL THINGS ###
######################

### WIRELESS ROUTER SETTING ###
# https://www.raspberrypi.org/documentation/configuration/wireless/access-point.md
# https://wiki.debian.org/BuildingTutorial#The_packaging_workflow
# https://github.com/pritambaral/hostapd-rtl871xdrv

sudo bash

echo "denyinterfaces wlan0" >> /etc/dhcpcd.conf

# INSTALL DNSMASQ AND HOSTAPD
apt-get install -y dnsmasq hostapd
systemctl stop dnsmasq
systemctl stop hostapd

# DHCP SERVER CONFIGURATION
echo "interface=wlan0" > /etc/dnsmasq.conf
echo "dhcp-range=192.168.100.20,192.168.100.50,255.255.255.0" >> /etc/dnsmasq.conf

# HOSTAPD CONFIGURATION
wget http://www.adafruit.com/downloads/adafruit_hostapd.zip
unzip adafruit_hostapd.zip
chmod 755 hostapd
mv hostapd /usr/local/bin/hostapd.rtl871xdrv
cp /usr/sbin/hostapd /usr/local/bin/hostapd.default
ln -sf /usr/local/bin/hostapd.rtl871xdrv /usr/sbin/hostapd
rm adafruit_hostapd.zip

cat <<EOF > /etc/hostapd/hostapd.conf
interface=wlan0
#driver=nl80211
driver=rtl871xdrv
ssid=${HOSTNAME}
hw_mode=g
channel=6
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=raspberry
wpa_key_mgmt=WPA-PSK
wpa_pairwise=CCMP
wpa_group_rekey=86400
ieee80211n=1
wme_enabled=1
EOF

echo DAEMON_CONF="/etc/hostapd/hostapd.conf" > /etc/default/hostapd

hostapd /etc/hostapd/hostapd.conf

systemctl enable dnsmasq.service
systemctl start dnsmasq.service
systemctl enable hostapd.service
systemctl start hostapd.service

# ROUTING CONFIGURATION
echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
echo 1 > /proc/sys/net/ipv4/ip_forward
iptables -t nat -A POSTROUTING -o wlan1 -j MASQUERADE
iptables -A FORWARD -i wlan1 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i wlan0 -o wlan1 -j ACCEPT
iptables-save > /etc/iptables.ipv4.nat
echo 'iptables-restore < /etc/iptables.ipv4.nat' > /lib/dhcpcd/dhcpcd-hooks/70-ipv4-nat

reboot

### SMART PLUG ###
# Control TP-Link Wi-Fi Smart Plug HS100/HS105
# https://github.com/GadgetReactor/pyHS100

sudo sh -c "echo 'dhcp-host=50:c7:bf:xx:xx:xx,192.168.100.51' >> /etc/dnsmasq.conf"
sudo sh -c "echo 'dhcp-host=50:c7:bf:zz:zz:zz,192.168.100.52' >> /etc/dnsmasq.conf"

sudo systemctl restart dnsmasq

sudo apt-get install -y python-pip
sudo pip install pyHS100=="0.2.4.2"
pyhs100 --ip=192.168.100.51 off
#  Turning off..
pyhs100 --ip=192.168.100.51 on
#  Turning on..

### Install Homebridge ###
# https://gist.github.com/johannrichard/0ad0de1feb6adb9eb61a/
# https://timleland.com/setup-homebridge-to-start-on-bootup/

# Get Binary from Official Site https://nodejs.org/en/download/

wget https://nodejs.org/dist/v6.11.4/node-v6.11.4-linux-armv7l.tar.xz
tar xvJf node-v6.11.4-linux-armv7l.tar.xz
sudo mv node-v6.11.4-linux-armv7l /opt/node
rm node-v6.11.4-linux-armv7l.tar.xz
sudo update-alternatives --install "/usr/bin/node" "node" "/opt/node/bin/node" 1
sudo update-alternatives --install "/usr/bin/npm" "npm" "/opt/node/bin/npm" 1

sudo apt-get install -y libavahi-compat-libdnssd-dev
sudo /opt/node/bin/npm install -g homebridge
sudo /opt/node/bin/npm install -g homebridge-cmd

git clone https://github.com/mbuzz15/RPi-Farm-Mon
mkdir .homebridge
cp RPi-Farm-Mon/sample/config.json.sample .homebridge/config.json

/opt/node/lib/node_modules/homebridge/bin/homebridge

sudo touch /etc/default/homebridge
sudo cp /home/pi/RPi-Farm-Mon/sample/homebridge.service.sample /etc/systemd/system/homebridge.service
sudo systemctl daemon-reload
sudo systemctl start homebridge
sudo systemctl enable homebridge
sudo systemctl status homebridge

### E-Mail ###

sudo apt-get install -y mutt ssmtp
sudo sh -c 'cat <<EOF > /etc/ssmtp/ssmtp.conf
mailhub=smtp.gmail.com:587
AuthUser=xxxxxxxx@gmail.com
AuthPass=xxxxxxxx
UseSTARTTLS=YES
AuthLogin=YES
EOF'

cp RPi-Farm-Mon/sample/sample1.sh send_sensor_data.sh
sh send_sensor_data.sh

vim .homebridge/config.json

#    :
#    "accessories": [
#        :
#        {
#            "accessory": "CMD",
#            "name": "Send Sensor Data",
#            "on_cmd": "sh /home/pi/send_sensor_data.sh",
#            "off_cmd": "sh /home/pi/send_sensor_data.sh"
#        }
#    ]
#    :

sudo systemctl restart homebridge

vim .homebridge/config.json

#    :
#    "accessories": [
#        :
#        {
#            "accessory": "CMD",
#            "name": "Send Picture",
#            "on_cmd": "sh /home/pi/send_picture.sh",
#            "off_cmd": "sh /home/pi/send_picture.sh"
#        },
#    ]
#    :

cp RPi-Farm-Mon/sample/sample3.sh send_data_and_picture.sh
sh /home/pi/send_data_and_picture.sh

vim .homebridge/config.json

#    :
#    "accessories": [
#        :
#        {
#            "accessory": "CMD",
#            "name": "Send Environment Data",
#            "on_cmd": "sh /home/pi/send_data_and_picture.sh",
#            "off_cmd": "sh /home/pi/send_data_and_picture.sh"
#        },
#    ]
#    :


vim .homebridge/config.json

#    :
#    "accessories": [
#        :
#        {
#            "accessory": "CMD",
#            "name": "hs105-1",
#            "on_cmd": "pyhs100 --ip=192.168.100.51 on",
#            "off_cmd": "pyhs100 --ip=192.168.100.51 off"
#        },
#        {
#            "accessory": "CMD",
#            "name": "hs105-2",
#            "on_cmd": "pyhs100 --ip=192.168.100.52 on",
#            "off_cmd": "pyhs100 --ip=192.168.100.52 off"
#        }
#    ]
#    :

sudo systemctl restart homebridge
